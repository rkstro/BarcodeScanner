<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 24.4.1">

    <issue
        id="LocaleFolder"
        severity="Warning"
        message="The locale folder &quot;`he`&quot; should be called &quot;`iw`&quot; instead; see the `java.util.Locale` documentation"
        category="Correctness"
        priority="6"
        summary="Wrong locale name"
        explanation="From the `java.util.Locale` documentation:
&quot;Note that Java uses several deprecated two-letter codes. The Hebrew (&quot;he&quot;) language code is rewritten as &quot;iw&quot;, Indonesian (&quot;id&quot;) as &quot;in&quot;, and Yiddish (&quot;yi&quot;) as &quot;ji&quot;. This rewriting happens even if you construct your own Locale object, not just for instances returned by the various lookup methods.

Because of this, if you add your localized resources in for example `values-he` they will not be used, since the system will look for `values-iw` instead.

To work around this, place your resources in a `values` folder using the deprecated language code instead."
        url="http://developer.android.com/reference/java/util/Locale.html"
        urls="http://developer.android.com/reference/java/util/Locale.html">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-he"/>
    </issue>

    <issue
        id="LocaleFolder"
        severity="Warning"
        message="The locale folder &quot;`id`&quot; should be called &quot;`in`&quot; instead; see the `java.util.Locale` documentation"
        category="Correctness"
        priority="6"
        summary="Wrong locale name"
        explanation="From the `java.util.Locale` documentation:
&quot;Note that Java uses several deprecated two-letter codes. The Hebrew (&quot;he&quot;) language code is rewritten as &quot;iw&quot;, Indonesian (&quot;id&quot;) as &quot;in&quot;, and Yiddish (&quot;yi&quot;) as &quot;ji&quot;. This rewriting happens even if you construct your own Locale object, not just for instances returned by the various lookup methods.

Because of this, if you add your localized resources in for example `values-he` they will not be used, since the system will look for `values-iw` instead.

To work around this, place your resources in a `values` folder using the deprecated language code instead."
        url="http://developer.android.com/reference/java/util/Locale.html"
        urls="http://developer.android.com/reference/java/util/Locale.html">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-id"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the `android.os.Build.VERSION_CODES` javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.

To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="  &lt;uses-sdk android:minSdkVersion=&quot;15&quot; android:targetSdkVersion=&quot;22&quot;/>"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/AndroidManifest.xml"
            line="34"
            column="40"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.

To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdkVersion 22"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/build.gradle"
            line="9"
            column="9"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="The targetSdkVersion (22) should not be higher than the compileSdkVersion (21)"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compileSdkVersion 21"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/build.gradle"
            line="4"
            column="5"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `minSdkVersion` value (`15`) is not used; it is always overridden by the value specified in the Gradle build script (`15`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="  &lt;uses-sdk android:minSdkVersion=&quot;15&quot; android:targetSdkVersion=&quot;22&quot;/>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/AndroidManifest.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `targetSdkVersion` value (`22`) is not used; it is always overridden by the value specified in the Gradle build script (`22`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="  &lt;uses-sdk android:minSdkVersion=&quot;15&quot; android:targetSdkVersion=&quot;22&quot;/>"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/AndroidManifest.xml"
            line="34"
            column="40"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_height` of `0dp` instead of `wrap_content` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="        android:layout_height=&quot;wrap_content&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="40"
            column="9"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.beep` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/raw/beep.ogg"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.capture` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout/capture.xml"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.menu.capture` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/menu/capture.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.possible_result_points` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;possible_result_points&quot;>#c0ffbd21&lt;/color> &lt;!-- Android standard ICS color -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values/colors.xml"
            line="20"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.result_points` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;result_points&quot;>#c099cc00&lt;/color> &lt;!-- Android standard ICS color -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values/colors.xml"
            line="22"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.viewfinder_laser` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;viewfinder_laser&quot;>#ffcc0000&lt;/color> &lt;!-- Android standard ICS color -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values/colors.xml"
            line="27"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.viewfinder_mask` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;viewfinder_mask&quot;>#60000000&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values/colors.xml"
            line="28"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.msg_bulk_mode_scanned` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;string name=&quot;msg_bulk_mode_scanned&quot;>Bulk mode: barcode scanned and saved&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ar/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-bg/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ca/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-cs/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-da/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-de/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-el/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-es/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-eu/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-fi/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-fr/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-he/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-hi/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-hu/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-id/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-it/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-iw/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ja/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ko/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-nl/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-pl/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-pt/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ro/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ru/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-sk/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-sl/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-sv/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-th/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-tr/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-uk/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-zh-rCN/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-zh-rHK/strings.xml"
            line="63"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-zh-rTW/strings.xml"
            line="63"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.msg_camera_framework_bug` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;string name=&quot;msg_camera_framework_bug&quot;>Sorry, the Android camera encountered a problem. You may need to restart the device.&lt;/string>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ar/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-bg/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ca/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-cs/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-da/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-de/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-el/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-es/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-eu/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-fi/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-fr/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-he/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-hi/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-hu/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-id/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-it/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-iw/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ja/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ko/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-nl/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-pl/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-pt/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ro/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-ru/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-sk/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-sl/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-sv/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-th/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-tr/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-uk/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-zh-rCN/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-zh-rHK/strings.xml"
            line="64"
            column="11"/>
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/values-zh-rTW/strings.xml"
            line="64"
            column="11"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/launcher_icon.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/drawable/launcher_icon.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/share_via_barcode.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/drawable/share_via_barcode.png"/>
    </issue>

    <issue
        id="IconMissingDensityFolder"
        severity="Warning"
        message="Missing density variation folders in `src/main/res`: drawable-mdpi, drawable-xxxhdpi"
        category="Usability:Icons"
        priority="3"
        summary="Missing density folder"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingRight` you should probably also define `paddingLeft` for right-to-left symmetry"
        category="Bi-directional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="                    android:paddingRight=&quot;@dimen/half_padding&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="71"
            column="21"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingRight` you should probably also define `paddingLeft` for right-to-left symmetry"
        category="Bi-directional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="                    android:paddingRight=&quot;@dimen/half_padding&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="90"
            column="21"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingRight` you should probably also define `paddingLeft` for right-to-left symmetry"
        category="Bi-directional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="                    android:paddingRight=&quot;@dimen/half_padding&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="109"
            column="21"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingRight` you should probably also define `paddingLeft` for right-to-left symmetry"
        category="Bi-directional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="                    android:paddingRight=&quot;@dimen/half_padding&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="129"
            column="21"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Bi-directional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="                    android:paddingLeft=&quot;12dip&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="155"
            column="21"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Bi-directional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="                    android:paddingLeft=&quot;12dip&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="164"
            column="21"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingRight` you should probably also define `paddingLeft` for right-to-left symmetry"
        category="Bi-directional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="              android:paddingRight=&quot;8dip&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-land/encode.xml"
            line="45"
            column="15"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Bi-directional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="          android:paddingLeft=&quot;@dimen/standard_padding&quot;"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout/search_book_contents_header.xml"
            line="20"
            column="11"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingRight` you should probably also define `paddingLeft` for right-to-left symmetry"
        category="Bi-directional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="        android:paddingRight=&quot;24dip&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-land/share.xml"
            line="46"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`end`&quot; instead of &quot;`right`&quot; to ensure correct behavior in right-to-left locales"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="          android:gravity=&quot;right&quot;>"
        errorLine2="                           ~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="49"
            column="28"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingEnd=&quot;@dimen/half_padding&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:paddingRight=&quot;@dimen/half_padding&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="71"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingEnd=&quot;@dimen/half_padding&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:paddingRight=&quot;@dimen/half_padding&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="90"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingEnd=&quot;@dimen/half_padding&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:paddingRight=&quot;@dimen/half_padding&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="109"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingEnd=&quot;@dimen/half_padding&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:paddingRight=&quot;@dimen/half_padding&quot;/>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="129"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingStart=&quot;12dip&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:paddingLeft=&quot;12dip&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="155"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingStart=&quot;12dip&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                    android:paddingLeft=&quot;12dip&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-ldpi/capture.xml"
            line="164"
            column="21"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingEnd=&quot;8dip&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="              android:paddingRight=&quot;8dip&quot;"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-land/encode.xml"
            line="45"
            column="15"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="              android:layout_gravity=&quot;left|center_vertical&quot;"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout/search_book_contents.xml"
            line="32"
            column="39"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingStart=&quot;@dimen/standard_padding&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="          android:paddingLeft=&quot;@dimen/standard_padding&quot;"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout/search_book_contents_header.xml"
            line="20"
            column="11"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_gravity=&quot;left|top&quot;"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout/search_book_contents_list_item.xml"
            line="27"
            column="37"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;@dimen/standard_padding&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginRight=&quot;@dimen/standard_padding&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout/search_book_contents_list_item.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_gravity=&quot;left|top&quot;"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout/search_book_contents_list_item.xml"
            line="36"
            column="37"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:paddingEnd=&quot;24dip&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:paddingRight=&quot;24dip&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/rkstro/Development/sandbox/android/app/src/main/res/layout-land/share.xml"
            line="46"
            column="9"/>
    </issue>

</issues>
